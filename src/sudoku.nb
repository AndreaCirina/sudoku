(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     56118,       1211]
NotebookOptionsPosition[     55151,       1187]
NotebookOutlinePosition[     55652,       1206]
CellTagsIndexPosition[     55609,       1203]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", " ", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.860500368636446*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"9a39f568-919f-4adb-8af6-e8e71e19f064"],

Cell[BoxData[
 RowBox[{"<<", " ", "Sudoku`"}]], "Input",
 CellChangeTimes->{{3.8605003335934033`*^9, 3.860500333749993*^9}, {
  3.860500366188586*^9, 3.8605003750664425`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f74477cc-5091-4301-8864-0f395ffe0271"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SudokuGame"}]], "Input",
 CellChangeTimes->{{3.8605003805693626`*^9, 3.860500384786579*^9}, {
  3.8607488923670864`*^9, 3.8607488947851815`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"423ffae2-6041-4243-a41d-4be3275970a1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Gioco del sudoku\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"SudokuGame", "[", "]"}], ":=", 
                    RowBox[{"DynamicModule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`difficolta", "=", "\"Facile\""}], 
                    ",", 
                    
                    RowBox[{"Sudoku`Private`difficoltaInCorso", "=", 
                    "\"Medio\""}], ",", 
                    RowBox[{"Sudoku`Private`popupDifficolta", "=", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    
                    RowBox[{"Dynamic", "[", "Sudoku`Private`difficolta", 
                    "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Tutorial\"", ",", "\"Facile\"", ",", 
                    "\"Medio\"", ",", "\"Difficile\""}], "}"}], ",", 
                    RowBox[{"FieldSize", "\[Rule]", "Small"}]}], "]"}]}], ",", 
                    
                    RowBox[{"Sudoku`Private`difficoltaCarica", "=", 
                    "\"Facile\""}], ",", 
                    RowBox[{"Sudoku`Private`popupDifficoltaCarica", "=", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    
                    RowBox[{"Dynamic", "[", "Sudoku`Private`difficoltaCarica",
                     "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Tutorial\"", ",", "\"Facile\"", ",", 
                    "\"Medio\"", ",", "\"Difficile\""}], "}"}], ",", 
                    RowBox[{"FieldSize", "\[Rule]", "Small"}]}], "]"}]}], ",", 
                    RowBox[{"Sudoku`Private`numSudoku", "=", 
                    RowBox[{"RandomInteger", "[", "]"}]}], ",", 
                    RowBox[{"Sudoku`Private`caricaSudoku", "=", "0"}], ",", 
                    RowBox[{"Sudoku`Private`caricaSudokuInput", "=", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    
                    RowBox[{"Dynamic", "[", "Sudoku`Private`caricaSudoku", 
                    "]"}], ",", 
                    RowBox[{"FieldSize", "\[Rule]", "Small"}]}], "]"}]}], ",",
                     "Sudoku`Private`sudoku", ",", "Sudoku`Private`fullBoard",
                     ",", "Sudoku`Private`puzzle", ",", 
                    RowBox[{"Sudoku`Private`cursor", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    "Sudoku`Private`inputValue", ",", 
                    RowBox[{"Sudoku`Private`timer", "=", "0"}], ",", 
                    RowBox[{"Sudoku`Private`aiuto", "=", "False"}], ",", 
                    RowBox[{"Sudoku`Private`aiutoCheckbox", "=", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", "Sudoku`Private`aiuto", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Sudoku`Private`mostraSoluzione", "=", "False"}], 
                    ",", 
                    RowBox[{"Sudoku`Private`mostraSoluzioneCheckbox", "=", 
                    RowBox[{"Checkbox", "[", 
                    
                    RowBox[{"Dynamic", "[", "Sudoku`Private`mostraSoluzione", 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"Sudoku`Private`dimensioneManipulate", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`larghezza", "=", "650"}], ",", 
                    RowBox[{"Sudoku`Private`altezza", "=", "400"}]}], 
                    "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`sudoku", "=", 
                    RowBox[{"CreateSudoku", "[", 
                    RowBox[{"3", ",", "Sudoku`Private`difficoltaInCorso"}], 
                    "]"}]}], ";", 
                    RowBox[{"Sudoku`Private`fullBoard", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"fullBoard\"", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Sudoku`Private`puzzle", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"sudokuPuzzle\"", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Manipulate", "[", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"ShowSudoku", "[", 
                    
                    RowBox[{"Sudoku`Private`puzzle", ",", "22", ",", 
                    "Sudoku`Private`cursor"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"MouseClicked\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"Sudoku`Private`cursor", "=", 
                    RowBox[{"Sudoku`Private`loc2", "[", 
                    
                    RowBox[{"MousePosition", "[", "\"EventHandlerScaled\"", 
                    "]"}], "]"}]}], ")"}]}], ",", 
                    RowBox[{"\"KeyDown\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`inputValue", "=", 
                    RowBox[{"CurrentValue", "[", "\"EventKey\"", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Sudoku`Private`cursor", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "\[NotEqual]", "0"}], 
                    "&&", 
                    RowBox[{"DigitQ", "[", "Sudoku`Private`inputValue", "]"}],
                     "&&", 
                    RowBox[{"Between", "[", 
                    RowBox[{
                    
                    RowBox[{"ToExpression", "[", "Sudoku`Private`inputValue", 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "9"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sudoku`Private`puzzle", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"Sudoku`Private`cursor", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}],
                     "\[LeftDoubleBracket]", 
                    
                    RowBox[{"Sudoku`Private`cursor", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}],
                     "=", "Sudoku`Private`inputValue"}]}], "]"}]}], ")"}]}]}],
                     "}"}]}], "]"}], "}"}], "]"}], ",", "\"\\t\"", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Sudoku`Private`mostraSoluzione", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"ShowSudoku", "[", 
                    
                    RowBox[{"Sudoku`Private`fullBoard", ",", "15", ",", 
                    "Sudoku`Private`cursor"}], "]"}], "]"}], ",", "\"\""}], 
                    "]"}]}], "}"}], "}"}], "]"}], ",", 
                    RowBox[{"Control", "[", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "170", "]"}], ",", 
                    
                    RowBox[{"Sudoku`Private`titleMainStyle", "[", 
                    "\"Difficolt\[AGrave]:  \"", "]"}], ",", 
                    RowBox[{"Sudoku`Private`titleElemStyle", "[", 
                    
                    RowBox[{"Dynamic", "[", 
                    "Sudoku`Private`difficoltaInCorso", "]"}], "]"}], ",", 
                    RowBox[{"Spacer", "[", "20", "]"}], ",", 
                    
                    RowBox[{"Sudoku`Private`titleMainStyle", "[", 
                    "\"Numero Sudoku:  \"", "]"}], ",", 
                    RowBox[{"Sudoku`Private`titleElemStyle", "[", 
                    RowBox[{"Dynamic", "[", "Sudoku`Private`numSudoku", "]"}],
                     "]"}]}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"Control", "[", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "50"}], "}"}], "]"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Sudoku`Private`mainStyle", "[", "\"Aiuto: \"", 
                    "]"}], ",", 
                    RowBox[{
                    "Sudoku`Private`mainStyle", "[", "\"Mostra soluzione: \"",
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Sudoku`Private`aiutoCheckbox", ",", 
                    "Sudoku`Private`mostraSoluzioneCheckbox"}], "}"}]}], 
                    "}"}], "]"}], "]"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"Ricomincia\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`timer", "=", 
                    RowBox[{"-", "1"}]}], ";", 
                    RowBox[{"Sudoku`Private`aiuto", "=", "False"}], ";", 
                    RowBox[{"Sudoku`Private`mostraSoluzione", "=", "False"}], 
                    ";"}], ")"}], "&"}]}], "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Spacer", "[", 
                    RowBox[{"{", 
                    RowBox[{"350", ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Sudoku`Private`mainStyle", "[", "\"Tempo:  \"", 
                    "]"}], ",", 
                    RowBox[{"Sudoku`Private`avviaTimer", "[", "]"}]}], "}"}], 
                    "]"}], "}"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"Control", "[", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", 
                    RowBox[{"{", 
                    RowBox[{"100", ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Sudoku`Private`elemStyle", "[", 
                    "\"Nuovo Sudoku:\"", "]"}], ",", 
                    RowBox[{"Panel", "[", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Sudoku`Private`mainStyle", "[", 
                    "\"Difficolt\[AGrave]: \"", "]"}], "}"}], ",", 
                    RowBox[{"{", "Sudoku`Private`popupDifficolta", "}"}]}], 
                    "}"}], "]"}], "]"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"Nuovo Sudoku\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`timer", "=", 
                    RowBox[{"-", "1"}]}], ";", 
                    RowBox[{"Sudoku`Private`aiuto", "=", "False"}], ";", 
                    RowBox[{"Sudoku`Private`mostraSoluzione", "=", "False"}], 
                    ";", 
                    RowBox[{"Sudoku`Private`difficoltaInCorso", "=", 
                    "Sudoku`Private`difficolta"}], ";", 
                    RowBox[{"Sudoku`Private`numSudoku", "=", 
                    RowBox[{"Sudoku`Private`generaNuovoSeed", "[", "]"}]}], 
                    ";", 
                    RowBox[{"Sudoku`Private`sudoku", "=", 
                    RowBox[{"CreateSudoku", "[", 
                    RowBox[{"3", ",", "Sudoku`Private`difficoltaInCorso"}], 
                    "]"}]}], ";", 
                    RowBox[{"Sudoku`Private`fullBoard", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"fullBoard\"", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Sudoku`Private`puzzle", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"sudokuPuzzle\"", "\[RightDoubleBracket]"}]}], ";"}], 
                    ")"}], "&"}]}], "]"}]}], "}"}], "]"}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Spacer", "[", 
                    RowBox[{"{", 
                    RowBox[{"50", ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "5"}], "}"}], "]"}], ",", 
                    
                    RowBox[{"Sudoku`Private`elemStyle", "[", 
                    "\"Carica Sudoku:\"", "]"}], ",", 
                    RowBox[{"Panel", "[", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Sudoku`Private`mainStyle", "[", 
                    "\"Numero sudoku:\"", "]"}], "}"}], ",", 
                    RowBox[{"{", "Sudoku`Private`caricaSudokuInput", "}"}]}], 
                    "}"}], "]"}], "]"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"Carica Sudoku\"", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sudoku`Private`timer", "=", 
                    RowBox[{"-", "1"}]}], ";", 
                    RowBox[{"Sudoku`Private`aiuto", "=", "False"}], ";", 
                    RowBox[{"Sudoku`Private`mostraSoluzione", "=", "False"}], 
                    ";", 
                    RowBox[{"Sudoku`Private`difficoltaInCorso", "=", 
                    RowBox[{"Sudoku`Private`getDifficoltaCarica", "[", 
                    RowBox[{"Last", "[", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"Sudoku`Private`caricaSudoku", ",", "4"}], "]"}], 
                    "]"}], "]"}], "]"}], "]"}]}], ";", 
                    
                    RowBox[{"Sudoku`Private`numSudoku", "=", 
                    "Sudoku`Private`caricaSudoku"}], ";", 
                    RowBox[{"Sudoku`Private`sudoku", "=", 
                    RowBox[{"CreateSudoku", "[", 
                    RowBox[{"3", ",", "Sudoku`Private`difficoltaInCorso"}], 
                    "]"}]}], ";", 
                    RowBox[{"Sudoku`Private`fullBoard", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"fullBoard\"", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Sudoku`Private`puzzle", "=", 
                    
                    RowBox[{"Sudoku`Private`sudoku", "\[LeftDoubleBracket]", 
                    "\"sudokuPuzzle\"", "\[RightDoubleBracket]"}]}], ";"}], 
                    ")"}], "&"}]}], "]"}]}], "}"}], "]"}], "]"}]}], "}"}], 
                    "]"}]}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
                    
                    RowBox[{"ContentSize", "\[Rule]", 
                    "Sudoku`Private`dimensioneManipulate"}], ",", 
                    RowBox[{"ControlPlacement", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Top", ",", "Top", ",", "Bottom"}], "}"}]}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Sudoku`SudokuGame\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Gioco del sudoku\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {3., 5.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {3., 5.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Gioco del sudoku", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Sudoku`SudokuGame, {
      Sudoku`SudokuGame[] :> 
       DynamicModule[{
         Sudoku`Private`difficolta = "Facile", 
          Sudoku`Private`difficoltaInCorso = "Medio", 
          Sudoku`Private`popupDifficolta = PopupMenu[
            Dynamic[Sudoku`Private`difficolta], {
            "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> Small], 
          Sudoku`Private`difficoltaCarica = "Facile", 
          Sudoku`Private`popupDifficoltaCarica = PopupMenu[
            Dynamic[Sudoku`Private`difficoltaCarica], {
            "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> Small], 
          Sudoku`Private`numSudoku = RandomInteger[], 
          Sudoku`Private`caricaSudoku = 0, Sudoku`Private`caricaSudokuInput = 
          InputField[
            Dynamic[Sudoku`Private`caricaSudoku], FieldSize -> Small], 
          Sudoku`Private`sudoku, Sudoku`Private`fullBoard, 
          Sudoku`Private`puzzle, Sudoku`Private`cursor = {0, 0}, 
          Sudoku`Private`inputValue, Sudoku`Private`timer = 0, 
          Sudoku`Private`aiuto = False, Sudoku`Private`aiutoCheckbox = 
          Checkbox[
            Dynamic[Sudoku`Private`aiuto]], Sudoku`Private`mostraSoluzione = 
          False, Sudoku`Private`mostraSoluzioneCheckbox = Checkbox[
            Dynamic[Sudoku`Private`mostraSoluzione]], 
          Sudoku`Private`dimensioneManipulate = {
           Sudoku`Private`larghezza = 650, Sudoku`Private`altezza = 400}}, 
         Sudoku`Private`sudoku = 
          Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso]; 
         Sudoku`Private`fullBoard = Part[Sudoku`Private`sudoku, "fullBoard"]; 
         Sudoku`Private`puzzle = Part[Sudoku`Private`sudoku, "sudokuPuzzle"]; 
         Manipulate[
           Grid[{{
              Column[{
                EventHandler[
                 Dynamic[
                  Sudoku`ShowSudoku[
                  Sudoku`Private`puzzle, 22, Sudoku`Private`cursor]], {
                 "MouseClicked" :> (Sudoku`Private`cursor = 
                   Sudoku`Private`loc2[
                    MousePosition["EventHandlerScaled"]]), 
                  "KeyDown" :> (
                   Sudoku`Private`inputValue = CurrentValue["EventKey"]; If[
                    And[Part[Sudoku`Private`cursor, 1] != 0, 
                    DigitQ[Sudoku`Private`inputValue], 
                    Between[
                    ToExpression[Sudoku`Private`inputValue], {1, 9}]], Part[
                    Part[Sudoku`Private`puzzle, 
                    Part[Sudoku`Private`cursor, 1]], 
                    Part[Sudoku`Private`cursor, 2]] = 
                    Sudoku`Private`inputValue])}]}], "\t", 
              If[Sudoku`Private`mostraSoluzione, 
               Dynamic[
                Sudoku`ShowSudoku[
                Sudoku`Private`fullBoard, 15, Sudoku`Private`cursor]], ""]}}], 
           Control[
            Row[{
              Spacer[170], 
              Sudoku`Private`titleMainStyle["Difficolt\[AGrave]:  "], 
              Sudoku`Private`titleElemStyle[
               Dynamic[Sudoku`Private`difficoltaInCorso]], 
              Spacer[20], 
              Sudoku`Private`titleMainStyle["Numero Sudoku:  "], 
              Sudoku`Private`titleElemStyle[
               Dynamic[Sudoku`Private`numSudoku]]}]], 
           Control[
            Row[{
              Spacer[{20, 50}], 
              Column[{
                Grid[
                 Transpose[{{
                    Sudoku`Private`mainStyle["Aiuto: "], 
                    Sudoku`Private`mainStyle["Mostra soluzione: "]}, {
                   Sudoku`Private`aiutoCheckbox, 
                    Sudoku`Private`mostraSoluzioneCheckbox}}]], 
                Button[
                "Ricomincia", (Sudoku`Private`timer = -1; 
                 Sudoku`Private`aiuto = False; 
                 Sudoku`Private`mostraSoluzione = False; Null)& ]}], 
              Spacer[{350, 0}], 
              Column[{
                Row[{
                  Sudoku`Private`mainStyle["Tempo:  "], 
                  Sudoku`Private`avviaTimer[]}]}]}]], 
           Control[
            Row[{
              Spacer[{100, 0}], 
              Column[{
                Sudoku`Private`elemStyle["Nuovo Sudoku:"], 
                Panel[
                 Column[{
                   Grid[
                    Transpose[{{
                    Sudoku`Private`mainStyle["Difficolt\[AGrave]: "]}, {
                    Sudoku`Private`popupDifficolta}}]], 
                   Button[
                   "Nuovo Sudoku", (Sudoku`Private`timer = -1; 
                    Sudoku`Private`aiuto = False; 
                    Sudoku`Private`mostraSoluzione = False; 
                    Sudoku`Private`difficoltaInCorso = 
                    Sudoku`Private`difficolta; 
                    Sudoku`Private`numSudoku = 
                    Sudoku`Private`generaNuovoSeed[]; 
                    Sudoku`Private`sudoku = 
                    Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso]; 
                    Sudoku`Private`fullBoard = 
                    Part[Sudoku`Private`sudoku, "fullBoard"]; 
                    Sudoku`Private`puzzle = 
                    Part[Sudoku`Private`sudoku, "sudokuPuzzle"]; 
                    Null)& ]}]]}], 
              Spacer[{50, 0}], 
              Column[{
                Spacer[{0, 5}], 
                Sudoku`Private`elemStyle["Carica Sudoku:"], 
                Panel[
                 Column[{
                   Grid[
                    Transpose[{{
                    Sudoku`Private`mainStyle["Numero sudoku:"]}, {
                    Sudoku`Private`caricaSudokuInput}}]], 
                   Button[
                   "Carica Sudoku", (Sudoku`Private`timer = -1; 
                    Sudoku`Private`aiuto = False; 
                    Sudoku`Private`mostraSoluzione = False; 
                    Sudoku`Private`difficoltaInCorso = 
                    Sudoku`Private`getDifficoltaCarica[
                    Last[
                    IntegerDigits[
                    ToExpression[
                    Mod[Sudoku`Private`caricaSudoku, 4]]]]]; 
                    Sudoku`Private`numSudoku = Sudoku`Private`caricaSudoku; 
                    Sudoku`Private`sudoku = 
                    Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso]; 
                    Sudoku`Private`fullBoard = 
                    Part[Sudoku`Private`sudoku, "fullBoard"]; 
                    Sudoku`Private`puzzle = 
                    Part[Sudoku`Private`sudoku, "sudokuPuzzle"]; 
                    Null)& ]}]]}]}]], SaveDefinitions -> True, ContentSize -> 
           Sudoku`Private`dimensioneManipulate, 
           ControlPlacement -> {Top, Top, Bottom}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Sudoku`SudokuGame"|>, False]]], "Output",
 CellChangeTimes->{{3.8607489040490932`*^9, 3.8607489107812395`*^9}, 
   3.8607495906691008`*^9, {3.860749958607411*^9, 3.860749976144865*^9}, 
   3.8607500845043573`*^9, 3.8607503637521105`*^9, 3.8607520768512306`*^9, 
   3.8607526619883895`*^9, 3.8608187854979134`*^9, 3.860819038883255*^9, 
   3.8608190982651815`*^9, {3.860819158397416*^9, 3.860819178487342*^9}, 
   3.8608192581411285`*^9, 3.860819304174997*^9, {3.86081940408652*^9, 
   3.8608194285073357`*^9}, 3.861068754089235*^9, 3.8610690415475187`*^9, 
   3.8610691322219505`*^9, 3.8610691904404674`*^9, 3.861069228171137*^9, 
   3.8610698449077024`*^9, 3.861069888651621*^9, 3.861069940723174*^9, 
   3.8610703768581266`*^9, 3.8610704116528997`*^9, 3.861070618611951*^9, 
   3.8610715848580055`*^9, {3.8610718275473228`*^9, 3.8610718448788266`*^9}, 
   3.861072052496004*^9, 3.8610721274829473`*^9, 3.861072171979582*^9, 
   3.861072228061187*^9, 3.8610722605735345`*^9, 3.8610724043896956`*^9, {
   3.861072437841797*^9, 3.8610724610748596`*^9}, 3.861072497133757*^9, 
   3.86107254369843*^9, 3.8610726328755026`*^9, 3.861072786495719*^9, 
   3.8610730197000947`*^9, 3.8610732232252035`*^9, 3.861073293723981*^9, 
   3.861073410285663*^9, 3.8610735435009594`*^9, 3.861074114138278*^9, {
   3.8610741862894278`*^9, 3.861074205798152*^9}, 3.861075131248342*^9, 
   3.861075170909728*^9, 3.861075202735977*^9, {3.861075375698885*^9, 
   3.861075410794454*^9}, 3.86107544812363*^9, 3.861075741411654*^9, 
   3.861075772508885*^9, 3.8610762127361403`*^9, 3.861076248194137*^9, {
   3.86107628514662*^9, 3.861076326029964*^9}, 3.861076414029303*^9, 
   3.861076482328784*^9, 3.861076564863647*^9, 3.861076745935114*^9, {
   3.861077586919086*^9, 3.8610776359442244`*^9}, 3.861165996258467*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a548345a-e133-487c-b35e-3eb204db91bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SudokuGame", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8610692491032915`*^9, 3.861069254593988*^9}, {
  3.8610704491045384`*^9, 3.8610704509888315`*^9}, {3.86107053567478*^9, 
  3.8610705369364696`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"129225ac-57d0-4eb3-ade8-5a1611fdb436"],

Cell[BoxData[
 DynamicModuleBox[{Sudoku`Private`difficolta$$ = "Facile", 
  Sudoku`Private`difficoltaInCorso$$ = "Medio", 
  Sudoku`Private`popupDifficolta$$ = PopupMenu[
   Dynamic[Sudoku`Private`difficolta$$], {
   "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> Small], 
  Sudoku`Private`difficoltaCarica$$ = "Facile", 
  Sudoku`Private`popupDifficoltaCarica$$ = PopupMenu[
   Dynamic[Sudoku`Private`difficoltaCarica$$], {
   "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> Small], 
  Sudoku`Private`numSudoku$$ = 0, Sudoku`Private`caricaSudoku$$ = 0, 
  Sudoku`Private`caricaSudokuInput$$ = InputField[
   Dynamic[Sudoku`Private`caricaSudoku$$], FieldSize -> Small], 
  Sudoku`Private`sudoku$$ = <|
  "fullBoard" -> 
   SparseArray[
    Automatic, {9, 9}, 0, {
     1, {{0, 9, 18, 27, 36, 45, 54, 63, 72, 81}, {{1}, {2}, {3}, {4}, {5}, {
       6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
       2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {
       7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {
       3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {
       8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
       4}, {5}, {6}, {7}, {8}, {9}}}, {9, 1, 8, 5, 4, 3, 6, 7, 2, 3, 7, 6, 2, 
      1, 8, 9, 4, 5, 4, 5, 2, 7, 6, 9, 8, 3, 1, 8, 4, 7, 3, 2, 5, 1, 9, 6, 6, 
      2, 5, 1, 9, 4, 3, 8, 7, 1, 3, 9, 6, 8, 7, 5, 2, 4, 5, 9, 4, 8, 7, 1, 2, 
      6, 3, 7, 6, 3, 9, 5, 2, 4, 1, 8, 2, 8, 1, 4, 3, 6, 7, 5, 9}}], 
   "sudokuPuzzle" -> 
   SparseArray[
    Automatic, {9, 9}, Blank[], {
     1, {{0, 5, 8, 11, 16, 21, 26, 31, 37, 41}, {{6}, {5}, {3}, {7}, {2}, {
       9}, {3}, {1}, {7}, {8}, {9}, {6}, {7}, {5}, {9}, {4}, {5}, {7}, {1}, {
       9}, {2}, {1}, {7}, {5}, {8}, {4}, {7}, {6}, {5}, {4}, {9}, {8}, {7}, {
       3}, {1}, {9}, {2}, {2}, {5}, {7}, {4}}}, {3, 4, 8, 6, 1, 5, 6, 3, 8, 3,
       1, 5, 1, 2, 6, 3, 9, 3, 6, 7, 2, 1, 5, 8, 2, 6, 2, 1, 7, 8, 3, 1, 4, 3,
       7, 8, 6, 8, 3, 7, 4}}]|>, Sudoku`Private`fullBoard$$ = SparseArray[
  Automatic, {9, 9}, 0, {
   1, {{0, 9, 18, 27, 36, 45, 54, 63, 72, 81}, {{1}, {2}, {3}, {4}, {5}, {
     6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {
     2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {
     7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {
     3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {
     8}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {1}, {2}, {3}, {
     4}, {5}, {6}, {7}, {8}, {9}}}, {9, 1, 8, 5, 4, 3, 6, 7, 2, 3, 7, 6, 2, 1,
     8, 9, 4, 5, 4, 5, 2, 7, 6, 9, 8, 3, 1, 8, 4, 7, 3, 2, 5, 1, 9, 6, 6, 2, 
    5, 1, 9, 4, 3, 8, 7, 1, 3, 9, 6, 8, 7, 5, 2, 4, 5, 9, 4, 8, 7, 1, 2, 6, 3,
     7, 6, 3, 9, 5, 2, 4, 1, 8, 2, 8, 1, 4, 3, 6, 7, 5, 9}}], 
  Sudoku`Private`puzzle$$ = SparseArray[
  Automatic, {9, 9}, Blank[], {
   1, {{0, 6, 9, 13, 20, 25, 30, 39, 45, 49}, {{6}, {5}, {3}, {7}, {2}, {1}, {
     9}, {3}, {1}, {7}, {8}, {9}, {1}, {6}, {7}, {5}, {9}, {4}, {1}, {2}, {
     5}, {7}, {1}, {9}, {2}, {1}, {7}, {5}, {8}, {4}, {7}, {6}, {5}, {4}, {
     9}, {1}, {2}, {3}, {8}, {8}, {7}, {3}, {1}, {9}, {2}, {2}, {5}, {7}, {
     4}}}, {3, 4, 8, 6, 1, 4, 5, 6, 3, 8, 3, 1, 8, 5, 1, 2, 6, 3, 4, 8, 9, 3, 
    6, 7, 2, 1, 5, 8, 2, 6, 2, 1, 7, 8, 3, 4, 5, 9, 4, 1, 4, 3, 7, 8, 6, 8, 3,
     7, 4}}], Sudoku`Private`cursor$$ = {7, 8}, Sudoku`Private`inputValue$$ = 
  "4", Sudoku`Private`timer$$ = 618, Sudoku`Private`aiuto$$ = False, 
  Sudoku`Private`aiutoCheckbox$$ = Checkbox[
   Dynamic[Sudoku`Private`aiuto$$]], Sudoku`Private`mostraSoluzione$$ = True, 
  Sudoku`Private`mostraSoluzioneCheckbox$$ = Checkbox[
   Dynamic[Sudoku`Private`mostraSoluzione$$]], 
  Sudoku`Private`dimensioneManipulate$$ = {650, 400}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Row[{
          Spacer[170], 
          Style["Difficolt\[AGrave]:  ", FontSize -> 16], 
          Style[
           Dynamic[Sudoku`Private`difficoltaInCorso$$], FontSize -> 16, Bold], 
          Spacer[20], 
          Style["Numero Sudoku:  ", FontSize -> 16], 
          Style[
           Dynamic[Sudoku`Private`numSudoku$$], FontSize -> 16, Bold]}]], 
       Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Row[{
          Spacer[{20, 50}], 
          Column[{
            Grid[{{
               Style["Aiuto: ", FontSize -> 14], 
               Checkbox[
                Dynamic[Sudoku`Private`aiuto$$]]}, {
               Style["Mostra soluzione: ", FontSize -> 14], 
               Checkbox[
                Dynamic[Sudoku`Private`mostraSoluzione$$]]}}], 
            Button[
            "Ricomincia", (Sudoku`Private`timer$$ = -1; 
             Sudoku`Private`aiuto$$ = False; 
             Sudoku`Private`mostraSoluzione$$ = False; Null)& ]}], 
          Spacer[{350, 0}], 
          Column[{
            Row[{
              Style["Tempo:  ", FontSize -> 14], 
              Dynamic[
               Refresh[
               Sudoku`Private`timer$$ = Sudoku`Private`timer$$ + 1; 
                Sudoku`Private`convert[Sudoku`Private`timer$$], 
                TrackedSymbols :> {}, UpdateInterval -> 1]]}]}]}]], 
       Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Row[{
          Spacer[{100, 0}], 
          Column[{
            Style["Nuovo Sudoku:", FontSize -> 14, Bold], 
            Panel[
             Column[{
               Grid[{{
                  Style["Difficolt\[AGrave]: ", FontSize -> 14], 
                  PopupMenu[
                   Dynamic[Sudoku`Private`difficolta$$], {
                   "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> 
                   Small]}}], 
               Button[
               "Nuovo Sudoku", (Sudoku`Private`timer$$ = -1; 
                Sudoku`Private`aiuto$$ = False; 
                Sudoku`Private`mostraSoluzione$$ = False; 
                Sudoku`Private`difficoltaInCorso$$ = 
                 Sudoku`Private`difficolta$$; 
                Sudoku`Private`numSudoku$$ = Sudoku`Private`generaNuovoSeed[]; 
                Sudoku`Private`sudoku$$ = 
                 Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso$$]; 
                Sudoku`Private`fullBoard$$ = 
                 Part[Sudoku`Private`sudoku$$, "fullBoard"]; 
                Sudoku`Private`puzzle$$ = 
                 Part[Sudoku`Private`sudoku$$, "sudokuPuzzle"]; Null)& ]}]]}], 
          Spacer[{50, 0}], 
          Column[{
            Spacer[{0, 5}], 
            Style["Carica Sudoku:", FontSize -> 14, Bold], 
            Panel[
             Column[{
               Grid[{{
                  Style["Numero sudoku:", FontSize -> 14], 
                  InputField[
                   Dynamic[Sudoku`Private`caricaSudoku$$], FieldSize -> 
                   Small]}}], 
               Button[
               "Carica Sudoku", (Sudoku`Private`timer$$ = -1; 
                Sudoku`Private`aiuto$$ = False; 
                Sudoku`Private`mostraSoluzione$$ = False; 
                Sudoku`Private`difficoltaInCorso$$ = 
                 Sudoku`Private`getDifficoltaCarica[
                   Last[
                    IntegerDigits[
                    ToExpression[
                    Mod[Sudoku`Private`caricaSudoku$$, 4]]]]]; 
                Sudoku`Private`numSudoku$$ = Sudoku`Private`caricaSudoku$$; 
                Sudoku`Private`sudoku$$ = 
                 Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso$$]; 
                Sudoku`Private`fullBoard$$ = 
                 Part[Sudoku`Private`sudoku$$, "fullBoard"]; 
                Sudoku`Private`puzzle$$ = 
                 Part[Sudoku`Private`sudoku$$, "sudokuPuzzle"]; 
                Null)& ]}]]}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {443., {121.70722647840157`, 126.29277352159843`}}, 
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
           Column[{
             EventHandler[
              Dynamic[
               Sudoku`ShowSudoku[
               Sudoku`Private`puzzle$$, 22, Sudoku`Private`cursor$$]], {
              "MouseClicked" :> (Sudoku`Private`cursor$$ = Sudoku`Private`loc2[
                  MousePosition["EventHandlerScaled"]]), 
               "KeyDown" :> (
                Sudoku`Private`inputValue$$ = CurrentValue["EventKey"]; If[
                  And[Part[Sudoku`Private`cursor$$, 1] != 0, 
                   DigitQ[Sudoku`Private`inputValue$$], 
                   Between[
                    ToExpression[Sudoku`Private`inputValue$$], {1, 9}]], Part[
                    Part[Sudoku`Private`puzzle$$, 
                    Part[Sudoku`Private`cursor$$, 1]], 
                    Part[Sudoku`Private`cursor$$, 2]] = 
                  ToExpression[Sudoku`Private`inputValue$$]])}]}], "\t", 
           If[Sudoku`Private`mostraSoluzione$$, 
            Dynamic[
             Sudoku`ShowSudoku[
             Sudoku`Private`fullBoard$$, 15, Sudoku`Private`cursor$$]], 
            ""]}}], "Specifications" :> {
         Row[{
           Spacer[170], 
           Style["Difficolt\[AGrave]:  ", FontSize -> 16], 
           Style[
            Dynamic[Sudoku`Private`difficoltaInCorso$$], FontSize -> 16, 
            Bold], 
           Spacer[20], 
           Style["Numero Sudoku:  ", FontSize -> 16], 
           Style[
            Dynamic[Sudoku`Private`numSudoku$$], FontSize -> 16, Bold]}], 
         Row[{
           Spacer[{20, 50}], 
           Column[{
             Grid[{{
                Style["Aiuto: ", FontSize -> 14], 
                Checkbox[
                 Dynamic[Sudoku`Private`aiuto$$]]}, {
                Style["Mostra soluzione: ", FontSize -> 14], 
                Checkbox[
                 Dynamic[Sudoku`Private`mostraSoluzione$$]]}}], 
             Button[
             "Ricomincia", (Sudoku`Private`timer$$ = -1; 
              Sudoku`Private`aiuto$$ = False; 
              Sudoku`Private`mostraSoluzione$$ = False; Null)& ]}], 
           Spacer[{350, 0}], 
           Column[{
             Row[{
               Style["Tempo:  ", FontSize -> 14], 
               Dynamic[
                Refresh[
                Sudoku`Private`timer$$ = Sudoku`Private`timer$$ + 1; 
                 Sudoku`Private`convert[Sudoku`Private`timer$$], 
                 TrackedSymbols :> {}, UpdateInterval -> 1]]}]}]}], 
         Row[{
           Spacer[{100, 0}], 
           Column[{
             Style["Nuovo Sudoku:", FontSize -> 14, Bold], 
             Panel[
              Column[{
                Grid[{{
                   Style["Difficolt\[AGrave]: ", FontSize -> 14], 
                   PopupMenu[
                    Dynamic[Sudoku`Private`difficolta$$], {
                    "Tutorial", "Facile", "Medio", "Difficile"}, FieldSize -> 
                    Small]}}], 
                Button[
                "Nuovo Sudoku", (Sudoku`Private`timer$$ = -1; 
                 Sudoku`Private`aiuto$$ = False; 
                 Sudoku`Private`mostraSoluzione$$ = False; 
                 Sudoku`Private`difficoltaInCorso$$ = 
                  Sudoku`Private`difficolta$$; 
                 Sudoku`Private`numSudoku$$ = 
                  Sudoku`Private`generaNuovoSeed[]; 
                 Sudoku`Private`sudoku$$ = 
                  Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso$$]; 
                 Sudoku`Private`fullBoard$$ = 
                  Part[Sudoku`Private`sudoku$$, "fullBoard"]; 
                 Sudoku`Private`puzzle$$ = 
                  Part[Sudoku`Private`sudoku$$, "sudokuPuzzle"]; 
                 Null)& ]}]]}], 
           Spacer[{50, 0}], 
           Column[{
             Spacer[{0, 5}], 
             Style["Carica Sudoku:", FontSize -> 14, Bold], 
             Panel[
              Column[{
                Grid[{{
                   Style["Numero sudoku:", FontSize -> 14], 
                   InputField[
                    Dynamic[Sudoku`Private`caricaSudoku$$], FieldSize -> 
                    Small]}}], 
                Button[
                "Carica Sudoku", (Sudoku`Private`timer$$ = -1; 
                 Sudoku`Private`aiuto$$ = False; 
                 Sudoku`Private`mostraSoluzione$$ = False; 
                 Sudoku`Private`difficoltaInCorso$$ = 
                  Sudoku`Private`getDifficoltaCarica[
                    Last[
                    IntegerDigits[
                    ToExpression[
                    Mod[Sudoku`Private`caricaSudoku$$, 4]]]]]; 
                 Sudoku`Private`numSudoku$$ = Sudoku`Private`caricaSudoku$$; 
                 Sudoku`Private`sudoku$$ = 
                  Sudoku`CreateSudoku[3, Sudoku`Private`difficoltaInCorso$$]; 
                 Sudoku`Private`fullBoard$$ = 
                  Part[Sudoku`Private`sudoku$$, "fullBoard"]; 
                 Sudoku`Private`puzzle$$ = 
                  Part[Sudoku`Private`sudoku$$, "sudokuPuzzle"]; 
                 Null)& ]}]]}]}]}, 
       "Options" :> {
        ContentSize -> {650, 400}, ControlPlacement -> {Top, Top, Bottom}}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{539., {256.7072264784016, 261.2927735215984}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({Sudoku`ShowSudoku[
          Pattern[Sudoku`Private`board, 
           Blank[]], 
          Pattern[Sudoku`Private`dim, 
           Blank[]], 
          Optional[
           Pattern[Sudoku`Private`cursor, 
            Blank[]], {0, 0}]] := 
        Module[{Sudoku`Private`background, Sudoku`Private`err, 
           Sudoku`Private`un}, Sudoku`Private`background = Flatten[
             Table[{Sudoku`Private`i, Sudoku`Private`j} -> If[
                EvenQ[
                 Apply[Plus, 
                  Floor[{Sudoku`Private`i - 1, Sudoku`Private`j - 1}/3]]], 
                Darker[White], White], {Sudoku`Private`i, 9}, {
              Sudoku`Private`j, 9}]]; 
          Sudoku`Private`err = 
           Sudoku`Private`checkErrors[Sudoku`Private`board]; 
          Sudoku`Private`un = 
           Join[Sudoku`Private`background, Sudoku`Private`err]; 
          Grid[Sudoku`Private`board, ItemSize -> Full, Frame -> 
            If[Sudoku`Private`cursor == {0, 0}, All, {
              All, All, Sudoku`Private`cursor -> {Blue}}], BaseStyle -> 
            Sudoku`Private`dim, Spacings -> {
              Offset[0.9], 
              Offset[0.6]}, 
            Background -> {Automatic, Automatic, Sudoku`Private`un}]], 
        TagSet[Sudoku`ShowSudoku, 
         MessageName[Sudoku`ShowSudoku, "usage"], "mostra"], 
        Sudoku`Private`checkErrors[
          Pattern[Sudoku`Private`puzzle, 
           Blank[]]] := 
        Module[{Sudoku`Private`aux}, Sudoku`Private`aux = Flatten[
             Table[
              Sudoku`Private`row[
               Part[Sudoku`Private`puzzle, Sudoku`Private`x], 
               Sudoku`Private`x], {Sudoku`Private`x, 1, 9}], 1]; 
          Map[# -> Darker[Red]& , Sudoku`Private`aux]], Sudoku`Private`row[
          Pattern[Sudoku`Private`r, 
           Blank[]], 
          Pattern[Sudoku`Private`index, 
           Blank[]]] := 
        Module[{Sudoku`Private`norm, Sudoku`Private`dupl, 
           Sudoku`Private`coord, Sudoku`Private`aux}, 
          Sudoku`Private`norm = Normal[Sudoku`Private`r]; 
          Sudoku`Private`dupl = Cases[
             Tally[
              Cases[Sudoku`Private`norm, 
               Blank[Integer]]], 
             Condition[{
               Pattern[Sudoku`Private`x, 
                Blank[]], 
               Pattern[Sudoku`Private`y, 
                Blank[]]}, Sudoku`Private`y > 1]]; 
          Sudoku`Private`coord = If[Length[Sudoku`Private`dupl] > 0, 
             Flatten[
              Map[Position[Sudoku`Private`norm, 
                First[#]]& , Sudoku`Private`dupl]], Nothing]; 
          Map[{Sudoku`Private`index, #}& , Sudoku`Private`coord]], 
        Sudoku`Private`loc2[{
           Pattern[Sudoku`Private`x, 
            Blank[]], 
           Pattern[Sudoku`Private`y, 
            Blank[]]}] := {
         Floor[9 (1 - Sudoku`Private`y)] + 1, Floor[9 Sudoku`Private`x] + 1}, 
        Sudoku`Private`convert[
          Pattern[Sudoku`Private`x, 
           Blank[]]] := Sudoku`Private`elemStyle[
          UnitConvert[
           Quantity[Sudoku`Private`x, "Seconds"], 
           MixedUnit[{"Hours", "Minutes", "Seconds"}]]], 
        Sudoku`Private`elemStyle[
          Pattern[Sudoku`Private`s, 
           Blank[]]] := Style[Sudoku`Private`s, FontSize -> 14, Bold], 
        Sudoku`Private`generaNuovoSeed[] := RandomInteger[{1, 1000}], 
        Sudoku`CreateSudoku[
          Pattern[Sudoku`Private`dim, 
           Blank[]], 
          Pattern[Sudoku`Private`diffic, 
           Blank[]]] := 
        Module[{Sudoku`Private`fullBoard, Sudoku`Private`sudokuPuzzle, 
           Sudoku`Private`nEl}, 
          Sudoku`Private`nEl = 
           Switch[Sudoku`Private`diffic, "Tutorial", 0.9, "Facile", 0.7, 
             "Medio", 0.5, "Difficile", 0.2]; {
            Sudoku`Private`fullBoard, Sudoku`Private`sudokuPuzzle} = 
           ResourceFunction["GenerateSudokuPuzzle"][
            Sudoku`Private`dim, Sudoku`Private`nEl]; 
          Return[<|"fullBoard" -> Sudoku`Private`fullBoard, "sudokuPuzzle" -> 
             Sudoku`Private`sudokuPuzzle|>]], 
        TagSet[Sudoku`CreateSudoku, 
         MessageName[Sudoku`CreateSudoku, "usage"], " "], 
        Sudoku`Private`getDifficoltaCarica[
          Pattern[Sudoku`Private`seed, 
           Blank[]]] := 
        Switch[Sudoku`Private`seed, 0, "Tutorial", 1, "Facile", 2, "Medio", 
          Blank[], "Difficile"]}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Input",
 CellChangeTimes->{{3.8611662433901815`*^9, 
  3.8611662447695627`*^9}},ExpressionUUID->"0d37ae99-52ec-4c35-b524-\
142507697212"]
},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"aa3ba23a-012a-44de-86b9-47e132f7fc63"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 274, 6, 22, "Input",ExpressionUUID->"9a39f568-919f-4adb-8af6-e8e71e19f064"],
Cell[835, 28, 254, 4, 22, "Input",ExpressionUUID->"f74477cc-5091-4301-8864-0f395ffe0271"],
Cell[CellGroupData[{
Cell[1114, 36, 253, 4, 22, "Input",ExpressionUUID->"423ffae2-6041-4243-a41d-4be3275970a1"],
Cell[1370, 42, 34692, 740, 76, "Output",ExpressionUUID->"a548345a-e133-487c-b35e-3eb204db91bb"]
}, Open  ]],
Cell[36077, 785, 308, 5, 22, "Input",ExpressionUUID->"129225ac-57d0-4eb3-ade8-5a1611fdb436"],
Cell[36388, 792, 18759, 393, 530, InheritFromParent,ExpressionUUID->"0d37ae99-52ec-4c35-b524-142507697212"]
}
]
*)

